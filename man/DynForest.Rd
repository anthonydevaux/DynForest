% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynForest.R
\name{DynForest}
\alias{DynForest}
\title{Random forest with multivariate longitudinal endogenous covariates}
\usage{
DynForest(
  timeData = NULL,
  fixedData = NULL,
  idVar = NULL,
  timeVar = NULL,
  timeVarModel = NULL,
  Y = NULL,
  ntree = 200,
  mtry = 1,
  nodesize = 1,
  minsplit = 2,
  cause = 1,
  OOB_error = TRUE,
  imp = FALSE,
  imp.group = NULL,
  nsplit_option = "quantile",
  IBS.min = 0,
  IBS.max = NULL,
  ncores = NULL,
  seed = round(runif(1, 0, 10000)),
  ...
)
}
\arguments{
\item{timeData}{A data.frame containing the id and time measurements variables and the time-dependent predictors.}

\item{fixedData}{A data.frame containing the id variable and the time-fixed predictors. Non-continuous variables should be characterized as factor.}

\item{idVar}{A character indicating the name of variable to identify the subjects}

\item{timeVar}{A character indicating the name of time variable}

\item{timeVarModel}{A list for each time-dependent predictors containing a list of formula for fixed and random part from the mixed model}

\item{Y}{A list of output which should contain: \code{type} defines the nature of the output, can be "\code{surv}", "\code{curve}", "\code{scalar}" or "\code{factor}"; .}

\item{ntree}{Number of trees to grow. Default value set to 200.}

\item{mtry}{Number of candidate variables randomly drawn at each node of the trees. This parameter should be tuned by minimizing the OOB error. Default is \code{NULL}.}

\item{nodesize}{Minimal number of subjects required in both child nodes to split. Cannot be smaller than 1.}

\item{minsplit}{(Only with survival outcome) Minimal number of events required to split the node. Cannot be smaller than 2.}

\item{cause}{(Only with competing events) Number indicates the event of interest.}

\item{nsplit_option}{A character indicates how the values are chosen to build the two groups for the splitting rule (only for continuous predictors). Values are chosen using deciles (\code{nsplit_option}="quantile") or randomly (\code{nsplit_option}="sample"). Default value is "quantile".}

\item{ncores}{Number of cores used to grow trees in parallel. Default value is the number of cores of the computer-1.}

\item{seed}{Seed to replicate results}

\item{...}{Optional parameters to be passed to the low level function}
}
\value{
DynForest function return a list with the following elements:\tabular{ll}{
\code{data} \tab A list containing the data used to grow the trees \cr
\tab \cr
\code{rf} \tab A table with each tree in column. Provide multiple charactistics about the tree building \cr
\tab \cr
\code{type} \tab Outcome type \cr
\tab \cr
\code{times} \tab A numeric vector containing the time-to-event for all subjects \cr
\tab \cr
\code{cause} \tab Indicating the cause of interest \cr
\tab \cr
\code{causes} \tab A numeric vector containing the causes indicator \cr
\tab \cr
\code{Inputs} \tab A list of 3 elements: \code{Curve}, \code{Scalar} and \code{Factor}. Each element contains the names of the predictors \cr
\tab \cr
\code{Curve.model} \tab A list of longitudinal markers containing the formula used for modeling in the random forest \cr
\tab \cr
\code{param} \tab A list containing the hyperparameters \cr
\tab \cr
\code{comput.time} \tab Computation time \cr
}
}
\description{
Built a random forest using multivariate longitudinal endogenous covariates
}
\details{
The function currently supports survival (competing or single event), continuous or factor outcome.

FUTUR IMPROVEMENTS:
}
\examples{
\dontrun{
data(pbc2)

# Build survival data
pbc2_surv <- unique(pbc2[,c("id","age","drug","sex","years","event")])

# Define time-independent continuous covariate
cont_covar <- list(X = pbc2_surv[,"age", drop = FALSE],
                   id = pbc2_surv$id)

# Define time-independent non continuous covariates
fact_covar <- list(X = pbc2_surv[,c("drug","sex")],
                   id = pbc2_surv$id)

# Define time-dependent continuous markers
cont_traj <- list(X = pbc2[,c("serBilir","SGOT","albumin","alkaline")],
                  id = pbc2$id,
                  time = pbc2$time,
                  model = list(serBilir = list(fixed = serBilir ~ time,
                                               random = ~ time),
                               SGOT = list(fixed = SGOT ~ time + I(time^2),
                                           random = ~ time + I(time^2)),
                               albumin = list(fixed = albumin ~ time,
                                              random = ~ time),
                               alkaline = list(fixed = alkaline ~ time,
                                               random = ~ time))
)

# Define outcome (survival here)
Y <- list(type = "surv",
          Y = Surv(pbc2_surv$years, factor(pbc2_surv$event)),
          id = pbc2_surv$id)

# Run DynForest function
res_dyn <- DynForest(Curve = cont_traj, Factor = fact_covar, Scalar = cont_covar,
                     Y = Y, ntree = 200, imp = TRUE,
                     imp.group = list(group1 = c("serBilir","SGOT"),
                                      group2 = c("albumin","alkaline")),
                     mtry = 3, nodesize = 2, minsplit = 3,
                     cause = 2, seed = 1234)
}
}
\references{
Devaux et al., Random survival forests for competing risks with multivariate longitudinal endogenous covariates (2022), arXiv
}
\seealso{
\code{\link{predict.DynForest} \link{plot_VIMP} \link{plot_gVIMP} \link{plot_mindepth}}
}
\author{
Anthony Devaux (\email{anthony.devaux@u-bordeaux.fr})
}
